# Giftunity Project - Render Blueprint Configuration
# Professional microservices deployment with Environment Groups
# Region: Frankfurt (EU Central) - Cost Optimized

# Database Service Definition
databases:
  - name: Giftunity-db
    region: frankfurt
    plan: free
    postgresMajorVersion: 15

# Web and Static Service Definitions
services:
  # Backend API Service
  - type: web
    name: Giftunity-backend
    runtime: node
    region: frankfurt
    plan: free
    buildCommand: npm install --production
    startCommand: node src/server.js
    healthCheckPath: /health
    envVars:
      - fromGroup: giftunity-secrets
      - key: PORT
        value: 10000
      - key: DATABASE_URL
        fromDatabase:
          name: Giftunity-db
          property: connectionString
      - key: FRONTEND_URL
        fromService:
          name: Giftunity-frontend
          type: web
          property: host

  # Telegram Bot Service
  - type: web
    name: Giftunity-bot
    runtime: node
    region: frankfurt
    plan: free
    buildCommand: npm install --production
    startCommand: node src/bot.js
    healthCheckPath: /health
    envVars:
      - fromGroup: giftunity-secrets
      - key: BACKEND_URL
        fromService:
          name: Giftunity-backend
          type: web
          property: host
      - key: WEBHOOK_URL
        fromService:
          name: Giftunity-bot
          type: web
          property: host

  # Frontend Web Application
  - type: web
    name: Giftunity-frontend
    runtime: static
    plan: free
    buildCommand: echo "No build required for placeholder."
    staticPublishPath: ./build
    envVars:
      - fromGroup: giftunity-secrets
      - key: REACT_APP_BACKEND_URL
        fromService:
          name: Giftunity-backend
          type: web
          property: host
